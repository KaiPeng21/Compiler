;IR code
;LABEL MULT
;LINK
;MULTI $P1 $P2 $T1
;STOREI $T1 $L1
;STOREI $L1 $R
;RET

;LABEL TEST
;LINK
;STOREI 5 $T1
;GE $P1 $T1 label1
;STOREI 200 $T2
;STOREI $T2 g
;STOREI 1 $T3
;STOREI $T3 $R
;RET
;JUMP label2
;LABEL label1
;STOREI 4000 $T4
;STOREI $T4 g
;STOREI 1 $T5
;STOREI $T5 $R
;RET
;JUMP label2
;LABEL label2
;RET

;LABEL INCT
;LINK
;STOREI 1 $T1
;ADDI $P1 $T1 $T2
;STOREI $T2 $R
;RET

;LABEL main
;LINK
;STOREI 20 $T1
;STOREI $T1 g
;STOREI 1 $T2
;PUSH 
;PUSH $T2
;JSR TEST
;POP 
;POP $T3
;STOREI $T3 $L1
;WRITEI $L1
;WRITES space
;WRITEI g
;WRITES eol
;STOREI 10 $T4
;PUSH 
;PUSH $T4
;JSR TEST
;POP 
;POP $T5
;STOREI $T5 $L1
;WRITEI $L1
;WRITES space
;WRITEI g
;WRITES eol
;STOREI 20 $T6
;PUSH 
;PUSH $T6
;JSR TEST
;POP 
;POP $T7
;STOREI $T7 $L1
;WRITEI $L1
;WRITES space
;WRITEI g
;WRITES eol
;STOREI 2 $T8
;PUSH 
;PUSH $T8
;JSR TEST
;POP 
;POP $T9
;STOREI $T9 $L1
;WRITEI $L1
;WRITES space
;WRITEI g
;WRITES eol
;STOREI 0 $T10
;STOREI $T10 $R
;RET

;tiny code
str space " "
str eol "\n"
str m1 "get if block"
str m2 "get else block"
var g
push
push r0
push r1
push r2
push r3
jsr main
sys halt
label MULT
link 1
move $7 r0
muli $6 r0
move r0 $-1
move $-1 r1
move r1 $8
unlnk
ret
label TEST
link 0
move 5 r2
cmpi $6 r2
jge label1
move 200 r3
move r3 g
move 1 r4
move r4 $7
unlnk
ret
jmp label2
label label1
move 4000 r5
move r5 g
move 1 r6
move r6 $7
unlnk
ret
jmp label2
label label2
unlnk
ret
label INCT
link 0
move 1 r7
move $6 r8
addi r7 r8
move r8 $7
unlnk
ret
label main
link 1
move 20 r9
move r9 g
move 1 r10
push 
push r10
push r0
push r1
push r2
push r3
jsr TEST
pop r3
pop r2
pop r1
pop r0
pop 
pop r11
move r11 $-1
sys writei $-1
sys writes space
sys writei g
sys writes eol
move 10 r12
push 
push r12
push r0
push r1
push r2
push r3
jsr TEST
pop r3
pop r2
pop r1
pop r0
pop 
pop r13
move r13 $-1
sys writei $-1
sys writes space
sys writei g
sys writes eol
move 20 r14
push 
push r14
push r0
push r1
push r2
push r3
jsr TEST
pop r3
pop r2
pop r1
pop r0
pop 
pop r15
move r15 $-1
sys writei $-1
sys writes space
sys writei g
sys writes eol
move 2 r16
push 
push r16
push r0
push r1
push r2
push r3
jsr TEST
pop r3
pop r2
pop r1
pop r0
pop 
pop r17
move r17 $-1
sys writei $-1
sys writes space
sys writei g
sys writes eol
move 0 r18
move r18 $6
unlnk
ret
end
